# -*- coding: utf-8 -*-
"""Coin_converter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NFnYvlkkollzmK-w3yit1VYlF47sx_wL
"""

import requests

url = "http://api.exchangeratesapi.io/v1/latest"

API = "2390004b19f738a163b05eadb041d301"

params = {
    "access_key": "2390004b19f738a163b05eadb041d301",

    # "base": "USD",
    # "from": "USD",
    # "to": "EUR",
}


def currency_converter(from_="USD", to_=None, quantity=None, get_price=False):
    response = requests.get(url=url, params=params)
    response = response.json()["rates"]
    # print(response)
    if from_ != "USD":
        dollar = response[from_]
        dollar = float(dollar)
    else:
        dollar = response["USD"]
        dollar = float(dollar)
    # print(usd)

    one_dollar = float(response["EUR"]) / dollar

    for i, key in response.items():
        if i == to_:
            if quantity != None:
                ratio = 1 * float(response[to_]) / dollar

                result = float(quantity) * ratio
                result = round(result, 3)
                if get_price:
                    return result
                else:
                    print(f'${quantity} {from_} is ${result} {to_}\nWith a ratio of {ratio} {to_}/{from_} ')

            else:
                ratio = 1 * float(response[to_]) / dollar

                result = float(1) * ratio
                result = round(result, 3)
                quantity = 1
                if get_price:
                    return result
                else:
                    print(f'${quantity} {from_} is ${result} {to_}')


# currency_converter(to_="HTG", get_price=True)

# response = requests.get(url=url, params=params)

# response.text

market_cap_end_point = "https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest"

API_KEY = "0cd04d4f-5486-4bf4-8adf-41fc19ccad6f"

parameters = {
    'start': '1',
    'limit': '5000',
    'convert': 'USD',
    "symbol": "BTC,ETH"
}
headers = {
    'Accepts': 'application/json',
    'X-CMC_PRO_API_KEY': API_KEY,
}

# response = requests.get(url=market_cap_end_point, headers=headers)




def Coin_converter(coin_name="BTC", quantity=1, to_currency="USD", amount=1):
    response = requests.get(url=market_cap_end_point, headers=headers)
    data = response.json()["data"]
    for element in data:
        if element["symbol"] == coin_name:
            if amount == 1:
                price_for_one = element["quote"]['USD']["price"]
                coin_name_ = element["name"]
                price_for_input = round(float(amount) / float(price_for_one), 3)
                # return (f"1 {coin_name_} is currently trading at ${price_for_one}USD")
                return round(price_for_input, 3)
            else:
                price_for_one = element["quote"]['USD']["price"]
                price_for_input = round(float(amount) / float(price_for_one), 3)

                coin_name_ = element["name"]
                # return (f" ${amount} USD is currently {price_for_input} {coin_name_}")
                return price_for_input

        # else:
        #   print("COIN not Supported yet")
        #   print(f"1 Bitcoin is currently trading at ${price_for_one}USD")


#
# htg_to_usd = currency_converter(from_="HTG", to_="USD", quantity="87743.16", get_price=True)

# htg_to_usd

# twd_to_used

# USD_to_Coin_converter(coin_name="SHIB",to_currency=htg_to_usd)

# Coin_name = input("ENTER COIN's Symbol\n").upper()
# Local_currency = input("Enter your Local Currency's symbol\n").upper()
# Amount_in_your_local_currency = float(input("How much?\n"))

# user_money_to_usd = currency_converter(from_=Local_currency, to_="USD", quantity=Amount_in_your_local_currency,
#                                        get_price=True)
#
# user_money_to_usd

# result = Coin_converter(coin_name=Coin_name, amount=user_money_to_usd)


def coin_names():
    response_ = requests.get(url=market_cap_end_point, headers=headers)
    data = response_.json()["data"]

    list_names = [i["symbol"] for i in data]
    return list_names


def currency_symbol():
    response = requests.get(url=url, params=params)
    data = response.json()["rates"]
    list_symbol_names = [key for key, val in data.items()]
    list_symbol_names[0] = "USD"
    list_symbol_names[149] = "AED"

    return list_symbol_names






